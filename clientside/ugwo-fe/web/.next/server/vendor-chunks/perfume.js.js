"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/perfume.js";
exports.ids = ["vendor-chunks/perfume.js"];
exports.modules = {

/***/ "(rsc)/./node_modules/perfume.js/dist/perfume.min.js":
/*!*****************************************************!*\
  !*** ./node_modules/perfume.js/dist/perfume.min.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: !0\n}));\nvar e, t, n = {\n    isResourceTiming: !1,\n    isElementTiming: !1,\n    maxTime: 3e4,\n    reportOptions: {}\n}, r = window, i = r.console, a = r.navigator, o = r.performance, u = function() {\n    return a.deviceMemory;\n}, s = function() {\n    return a.hardwareConcurrency;\n}, c = \"mark.\", f = function() {\n    return o && !!o.getEntriesByType && !!o.now && !!o.mark;\n}, l = \"4g\", d = !1, v = {}, m = {\n    value: 0\n}, p = {\n    value: {\n        beacon: 0,\n        css: 0,\n        fetch: 0,\n        img: 0,\n        other: 0,\n        script: 0,\n        total: 0,\n        xmlhttprequest: 0\n    }\n}, T = {\n    value: 0\n}, h = {\n    value: 0\n}, g = {}, y = {\n    isHidden: !1,\n    didChange: !1\n}, S = function() {\n    y.isHidden = !1, document.hidden && (y.isHidden = document.hidden, y.didChange = !0);\n}, k = function(e, t) {\n    try {\n        var n = new PerformanceObserver(function(e) {\n            t(e.getEntries());\n        });\n        return n.observe({\n            type: e,\n            buffered: !0\n        }), n;\n    } catch (e) {\n        i.warn(\"Perfume.js:\", e);\n    }\n    return null;\n}, E = function() {\n    return !!(s() && s() <= 4) || !!(u() && u() <= 4);\n}, b = function(e, t) {\n    switch(e){\n        case \"slow-2g\":\n        case \"2g\":\n        case \"3g\":\n            return !0;\n        default:\n            return E() || t;\n    }\n}, M = function(e) {\n    return parseFloat(e.toFixed(4));\n}, x = function(e) {\n    return \"number\" != typeof e ? null : M(e / Math.pow(1024, 2));\n}, w = function(e, t, i, o, c) {\n    var f, v = function() {\n        n.analyticsTracker && (y.isHidden && ![\n            \"CLS\",\n            \"INP\"\n        ].includes(e) || n.analyticsTracker({\n            attribution: o,\n            metricName: e,\n            data: t,\n            navigatorInformation: a ? {\n                deviceMemory: u() || 0,\n                hardwareConcurrency: s() || 0,\n                serviceWorkerStatus: \"serviceWorker\" in a ? a.serviceWorker.controller ? \"controlled\" : \"supported\" : \"unsupported\",\n                isLowEndDevice: E(),\n                isLowEndExperience: b(l, d)\n            } : {},\n            rating: i,\n            navigationType: c\n        }));\n    };\n    [\n        \"CLS\",\n        \"INP\"\n    ].includes(e) ? v() : (f = v, \"requestIdleCallback\" in r ? r.requestIdleCallback(f, {\n        timeout: 3e3\n    }) : f());\n}, L = function(e) {\n    e.forEach(function(e) {\n        if (!(\"self\" !== e.name || e.startTime < m.value)) {\n            var t = e.duration - 50;\n            t > 0 && (T.value += t, h.value += t);\n        }\n    });\n};\nexports.IThresholdTier = void 0, (e = exports.IThresholdTier || (exports.IThresholdTier = {})).instant = \"instant\", e.quick = \"quick\", e.moderate = \"moderate\", e.slow = \"slow\", e.unavoidable = \"unavoidable\";\nvar C, O, B, I, P, D = ((t = {})[exports.IThresholdTier.instant] = {\n    vitalsThresholds: [\n        100,\n        200\n    ],\n    maxOutlierThreshold: 1e4\n}, t[exports.IThresholdTier.quick] = {\n    vitalsThresholds: [\n        200,\n        500\n    ],\n    maxOutlierThreshold: 1e4\n}, t[exports.IThresholdTier.moderate] = {\n    vitalsThresholds: [\n        500,\n        1e3\n    ],\n    maxOutlierThreshold: 1e4\n}, t[exports.IThresholdTier.slow] = {\n    vitalsThresholds: [\n        1e3,\n        2e3\n    ],\n    maxOutlierThreshold: 1e4\n}, t[exports.IThresholdTier.unavoidable] = {\n    vitalsThresholds: [\n        2e3,\n        5e3\n    ],\n    maxOutlierThreshold: 2e4\n}, t), F = {\n    RT: [\n        100,\n        200\n    ],\n    TBT: [\n        200,\n        600\n    ],\n    NTBT: [\n        200,\n        600\n    ]\n}, j = function(e, t) {\n    return F[e] ? t <= F[e][0] ? \"good\" : t <= F[e][1] ? \"needsImprovement\" : \"poor\" : null;\n}, N = function(e, t, n) {\n    Object.keys(t).forEach(function(e) {\n        \"number\" == typeof t[e] && (t[e] = M(t[e]));\n    }), w(e, t, null, n || {});\n}, _ = function(e) {\n    var t = e.attribution, r = e.name, i = e.rating, a = e.value, o = e.navigationType;\n    \"FCP\" === r && (m.value = a), [\n        \"FCP\",\n        \"LCP\"\n    ].includes(r) && !g[0] && (g[0] = k(\"longtask\", L)), \"FID\" === r && setTimeout(function() {\n        y.didChange || (_({\n            attribution: t,\n            name: \"TBT\",\n            rating: j(\"TBT\", T.value),\n            value: T.value,\n            navigationType: o\n        }), N(\"dataConsumption\", p.value));\n    }, 1e4);\n    var u = M(a);\n    u <= n.maxTime && u >= 0 && w(r, u, i, t, o);\n}, q = function() {\n    return window.performance && performance.getEntriesByType && performance.getEntriesByType(\"navigation\")[0];\n}, R = function(e) {\n    if (\"loading\" === document.readyState) return \"loading\";\n    var t = q();\n    if (t) {\n        if (e < t.domInteractive) return \"loading\";\n        if (0 === t.domContentLoadedEventStart || e < t.domContentLoadedEventStart) return \"dom-interactive\";\n        if (0 === t.domComplete || e < t.domComplete) return \"dom-content-loaded\";\n    }\n    return \"complete\";\n}, A = function(e) {\n    var t = e.nodeName;\n    return 1 === e.nodeType ? t.toLowerCase() : t.toUpperCase().replace(/^#/, \"\");\n}, H = function(e, t) {\n    var n = \"\";\n    try {\n        for(; e && 9 !== e.nodeType;){\n            var r = e, i = r.id ? \"#\" + r.id : A(r) + (r.classList && r.classList.value && r.classList.value.trim() && r.classList.value.trim().length ? \".\" + r.classList.value.trim().replace(/\\s+/g, \".\") : \"\");\n            if (n.length + i.length > (t || 100) - 1) return n || i;\n            if (n = n ? i + \">\" + n : i, r.id) break;\n            e = r.parentNode;\n        }\n    } catch (e) {}\n    return n;\n}, z = -1, W = function() {\n    return z;\n}, J = function(e) {\n    addEventListener(\"pageshow\", function(t) {\n        t.persisted && (z = t.timeStamp, e(t));\n    }, !0);\n}, U = function() {\n    var e = q();\n    return e && e.activationStart || 0;\n}, V = function(e, t) {\n    var n = q(), r = \"navigate\";\n    return W() >= 0 ? r = \"back-forward-cache\" : n && (document.prerendering || U() > 0 ? r = \"prerender\" : document.wasDiscarded ? r = \"restore\" : n.type && (r = n.type.replace(/_/g, \"-\"))), {\n        name: e,\n        value: void 0 === t ? -1 : t,\n        rating: \"good\",\n        delta: 0,\n        entries: [],\n        id: \"v3-\".concat(Date.now(), \"-\").concat(Math.floor(8999999999999 * Math.random()) + 1e12),\n        navigationType: r\n    };\n}, G = function(e, t, n) {\n    try {\n        if (PerformanceObserver.supportedEntryTypes.includes(e)) {\n            var r = new PerformanceObserver(function(e) {\n                Promise.resolve().then(function() {\n                    t(e.getEntries());\n                });\n            });\n            return r.observe(Object.assign({\n                type: e,\n                buffered: !0\n            }, n || {})), r;\n        }\n    } catch (e) {}\n}, K = function(e, t, n, r) {\n    var i, a;\n    return function(o) {\n        t.value >= 0 && (o || r) && ((a = t.value - (i || 0)) || void 0 === i) && (i = t.value, t.delta = a, t.rating = function(e, t) {\n            return e > t[1] ? \"poor\" : e > t[0] ? \"needs-improvement\" : \"good\";\n        }(t.value, n), e(t));\n    };\n}, Q = function(e) {\n    requestAnimationFrame(function() {\n        return requestAnimationFrame(function() {\n            return e();\n        });\n    });\n}, X = function(e) {\n    var t = function(t) {\n        \"pagehide\" !== t.type && \"hidden\" !== document.visibilityState || e(t);\n    };\n    addEventListener(\"visibilitychange\", t, !0), addEventListener(\"pagehide\", t, !0);\n}, Y = function(e) {\n    var t = !1;\n    return function(n) {\n        t || (e(n), t = !0);\n    };\n}, Z = -1, $ = function() {\n    return \"hidden\" !== document.visibilityState || document.prerendering ? 1 / 0 : 0;\n}, ee = function(e) {\n    \"hidden\" === document.visibilityState && Z > -1 && (Z = \"visibilitychange\" === e.type ? e.timeStamp : 0, ne());\n}, te = function() {\n    addEventListener(\"visibilitychange\", ee, !0), addEventListener(\"prerenderingchange\", ee, !0);\n}, ne = function() {\n    removeEventListener(\"visibilitychange\", ee, !0), removeEventListener(\"prerenderingchange\", ee, !0);\n}, re = function() {\n    return Z < 0 && (Z = $(), te(), J(function() {\n        setTimeout(function() {\n            Z = $(), te();\n        }, 0);\n    })), {\n        get firstHiddenTime () {\n            return Z;\n        }\n    };\n}, ie = function(e) {\n    document.prerendering ? addEventListener(\"prerenderingchange\", function() {\n        return e();\n    }, !0) : e();\n}, ae = [\n    1800,\n    3e3\n], oe = function(e, t) {\n    t = t || {}, ie(function() {\n        var n, r = re(), i = V(\"FCP\"), a = G(\"paint\", function(e) {\n            e.forEach(function(e) {\n                \"first-contentful-paint\" === e.name && (a.disconnect(), e.startTime < r.firstHiddenTime && (i.value = Math.max(e.startTime - U(), 0), i.entries.push(e), n(!0)));\n            });\n        });\n        a && (n = K(e, i, ae, t.reportAllChanges), J(function(r) {\n            i = V(\"FCP\"), n = K(e, i, ae, t.reportAllChanges), Q(function() {\n                i.value = performance.now() - r.timeStamp, n(!0);\n            });\n        }));\n    });\n}, ue = [\n    .1,\n    .25\n], se = {\n    passive: !0,\n    capture: !0\n}, ce = new Date, fe = function(e, t) {\n    C || (C = t, O = e, B = new Date, ve(removeEventListener), le());\n}, le = function() {\n    if (O >= 0 && O < B - ce) {\n        var e = {\n            entryType: \"first-input\",\n            name: C.type,\n            target: C.target,\n            cancelable: C.cancelable,\n            startTime: C.timeStamp,\n            processingStart: C.timeStamp + O\n        };\n        I.forEach(function(t) {\n            t(e);\n        }), I = [];\n    }\n}, de = function(e) {\n    if (e.cancelable) {\n        var t = (e.timeStamp > 1e12 ? new Date : performance.now()) - e.timeStamp;\n        \"pointerdown\" == e.type ? function(e, t) {\n            var n = function() {\n                fe(e, t), i();\n            }, r = function() {\n                i();\n            }, i = function() {\n                removeEventListener(\"pointerup\", n, se), removeEventListener(\"pointercancel\", r, se);\n            };\n            addEventListener(\"pointerup\", n, se), addEventListener(\"pointercancel\", r, se);\n        }(t, e) : fe(t, e);\n    }\n}, ve = function(e) {\n    [\n        \"mousedown\",\n        \"keydown\",\n        \"touchstart\",\n        \"pointerdown\"\n    ].forEach(function(t) {\n        return e(t, de, se);\n    });\n}, me = [\n    100,\n    300\n], pe = function(e, t) {\n    t = t || {}, ie(function() {\n        var n, r = re(), i = V(\"FID\"), a = function(e) {\n            e.startTime < r.firstHiddenTime && (i.value = e.processingStart - e.startTime, i.entries.push(e), n(!0));\n        }, o = function(e) {\n            e.forEach(a);\n        }, u = G(\"first-input\", o);\n        n = K(e, i, me, t.reportAllChanges), u && X(Y(function() {\n            o(u.takeRecords()), u.disconnect();\n        })), u && J(function() {\n            var r;\n            i = V(\"FID\"), n = K(e, i, me, t.reportAllChanges), I = [], O = -1, C = null, ve(addEventListener), r = a, I.push(r), le();\n        });\n    });\n}, Te = 0, he = 1 / 0, ge = 0, ye = function(e) {\n    e.forEach(function(e) {\n        e.interactionId && (he = Math.min(he, e.interactionId), ge = Math.max(ge, e.interactionId), Te = ge ? (ge - he) / 7 + 1 : 0);\n    });\n}, Se = function() {\n    return P ? Te : performance.interactionCount || 0;\n}, ke = function() {\n    \"interactionCount\" in performance || P || (P = G(\"event\", ye, {\n        type: \"event\",\n        buffered: !0,\n        durationThreshold: 0\n    }));\n}, Ee = [\n    200,\n    500\n], be = 0, Me = function() {\n    return Se() - be;\n}, xe = [], we = {}, Le = function(e) {\n    var t = xe[xe.length - 1], n = we[e.interactionId];\n    if (n || xe.length < 10 || e.duration > t.latency) {\n        if (n) n.entries.push(e), n.latency = Math.max(n.latency, e.duration);\n        else {\n            var r = {\n                id: e.interactionId,\n                latency: e.duration,\n                entries: [\n                    e\n                ]\n            };\n            we[r.id] = r, xe.push(r);\n        }\n        xe.sort(function(e, t) {\n            return t.latency - e.latency;\n        }), xe.splice(10).forEach(function(e) {\n            delete we[e.id];\n        });\n    }\n}, Ce = function(e, t) {\n    !function(e, t) {\n        t = t || {}, ie(function() {\n            var n;\n            ke();\n            var r, i = V(\"INP\"), a = function(e) {\n                e.forEach(function(e) {\n                    e.interactionId && Le(e), \"first-input\" === e.entryType && !xe.some(function(t) {\n                        return t.entries.some(function(t) {\n                            return e.duration === t.duration && e.startTime === t.startTime;\n                        });\n                    }) && Le(e);\n                });\n                var t, n = (t = Math.min(xe.length - 1, Math.floor(Me() / 50)), xe[t]);\n                n && n.latency !== i.value && (i.value = n.latency, i.entries = n.entries, r());\n            }, o = G(\"event\", a, {\n                durationThreshold: null !== (n = t.durationThreshold) && void 0 !== n ? n : 40\n            });\n            r = K(e, i, Ee, t.reportAllChanges), o && (\"interactionId\" in PerformanceEventTiming.prototype && o.observe({\n                type: \"first-input\",\n                buffered: !0\n            }), X(function() {\n                a(o.takeRecords()), i.value < 0 && Me() > 0 && (i.value = 0, i.entries = []), r(!0);\n            }), J(function() {\n                xe = [], be = Se(), i = V(\"INP\"), r = K(e, i, Ee, t.reportAllChanges);\n            }));\n        });\n    }(function(t) {\n        !function(e) {\n            if (e.entries.length) {\n                var t = e.entries.sort(function(e, t) {\n                    return t.duration - e.duration || t.processingEnd - t.processingStart - (e.processingEnd - e.processingStart);\n                })[0];\n                e.attribution = {\n                    eventTarget: H(t.target),\n                    eventType: t.name,\n                    eventTime: t.startTime,\n                    eventEntry: t,\n                    loadState: R(t.startTime)\n                };\n            } else e.attribution = {};\n        }(t), e(t);\n    }, t);\n}, Oe = [\n    2500,\n    4e3\n], Be = {}, Ie = [\n    800,\n    1800\n], Pe = function e(t) {\n    document.prerendering ? ie(function() {\n        return e(t);\n    }) : \"complete\" !== document.readyState ? addEventListener(\"load\", function() {\n        return e(t);\n    }, !0) : setTimeout(t, 0);\n}, De = function(e, t) {\n    t = t || {};\n    var n = V(\"TTFB\"), r = K(e, n, Ie, t.reportAllChanges);\n    Pe(function() {\n        var i = q();\n        if (i) {\n            var a = i.responseStart;\n            if (a <= 0 || a > performance.now()) return;\n            n.value = Math.max(a - U(), 0), n.entries = [\n                i\n            ], r(!0), J(function() {\n                n = V(\"TTFB\", 0), (r = K(e, n, Ie, t.reportAllChanges))(!0);\n            });\n        }\n    });\n}, Fe = function(e) {\n    e.forEach(function(e) {\n        e.identifier && _({\n            attribution: {\n                identifier: e.identifier\n            },\n            name: \"ET\",\n            rating: null,\n            value: e.startTime\n        });\n    });\n}, je = function(e) {\n    e.forEach(function(e) {\n        if (n.isResourceTiming && N(\"resourceTiming\", e), e.decodedBodySize && e.initiatorType) {\n            var t = e.decodedBodySize / 1e3;\n            p.value[e.initiatorType] += t, p.value.total += t;\n        }\n    });\n}, Ne = function() {\n    !function(e, t) {\n        De(function(t) {\n            !function(e) {\n                if (e.entries.length) {\n                    var t = e.entries[0], n = t.activationStart || 0, r = Math.max(t.domainLookupStart - n, 0), i = Math.max(t.connectStart - n, 0), a = Math.max(t.requestStart - n, 0);\n                    e.attribution = {\n                        waitingTime: r,\n                        dnsTime: i - r,\n                        connectionTime: a - i,\n                        requestTime: e.value - a,\n                        navigationEntry: t\n                    };\n                } else e.attribution = {\n                    waitingTime: 0,\n                    dnsTime: 0,\n                    connectionTime: 0,\n                    requestTime: 0\n                };\n            }(t), e(t);\n        }, t);\n    }(function(e) {\n        e.value > 0 && _(e);\n    }, n.reportOptions.ttfb), function(e, t) {\n        !function(e, t) {\n            t = t || {}, oe(Y(function() {\n                var n, r = V(\"CLS\", 0), i = 0, a = [], o = function(e) {\n                    e.forEach(function(e) {\n                        if (!e.hadRecentInput) {\n                            var t = a[0], n = a[a.length - 1];\n                            i && e.startTime - n.startTime < 1e3 && e.startTime - t.startTime < 5e3 ? (i += e.value, a.push(e)) : (i = e.value, a = [\n                                e\n                            ]);\n                        }\n                    }), i > r.value && (r.value = i, r.entries = a, n());\n                }, u = G(\"layout-shift\", o);\n                u && (n = K(e, r, ue, t.reportAllChanges), X(function() {\n                    o(u.takeRecords()), n(!0);\n                }), J(function() {\n                    i = 0, r = V(\"CLS\", 0), n = K(e, r, ue, t.reportAllChanges), Q(function() {\n                        return n();\n                    });\n                }), setTimeout(n, 0));\n            }));\n        }(function(t) {\n            !function(e) {\n                if (e.entries.length) {\n                    var t = e.entries.reduce(function(e, t) {\n                        return e && e.value > t.value ? e : t;\n                    });\n                    if (t && t.sources && t.sources.length) {\n                        var n = (r = t.sources).find(function(e) {\n                            return e.node && 1 === e.node.nodeType;\n                        }) || r[0];\n                        if (n) return void (e.attribution = {\n                            largestShiftTarget: H(n.node),\n                            largestShiftTime: t.startTime,\n                            largestShiftValue: t.value,\n                            largestShiftSource: n,\n                            largestShiftEntry: t,\n                            loadState: R(t.startTime)\n                        });\n                    }\n                }\n                var r;\n                e.attribution = {};\n            }(t), e(t);\n        }, t);\n    }(function(e) {\n        return _(e);\n    }, n.reportOptions.cls), function(e, t) {\n        oe(function(t) {\n            !function(e) {\n                if (e.entries.length) {\n                    var t = q(), n = e.entries[e.entries.length - 1];\n                    if (t) {\n                        var r = t.activationStart || 0, i = Math.max(0, t.responseStart - r);\n                        return void (e.attribution = {\n                            timeToFirstByte: i,\n                            firstByteToFCP: e.value - i,\n                            loadState: R(e.entries[0].startTime),\n                            navigationEntry: t,\n                            fcpEntry: n\n                        });\n                    }\n                }\n                e.attribution = {\n                    timeToFirstByte: 0,\n                    firstByteToFCP: e.value,\n                    loadState: R(W())\n                };\n            }(t), e(t);\n        }, t);\n    }(function(e) {\n        return _(e);\n    }, n.reportOptions.fcp), function(e, t) {\n        pe(function(t) {\n            !function(e) {\n                var t = e.entries[0];\n                e.attribution = {\n                    eventTarget: H(t.target),\n                    eventType: t.name,\n                    eventTime: t.startTime,\n                    eventEntry: t,\n                    loadState: R(t.startTime)\n                };\n            }(t), e(t);\n        }, t);\n    }(function(e) {\n        return _(e);\n    }, n.reportOptions.fid), function(e, t) {\n        !function(e, t) {\n            t = t || {}, ie(function() {\n                var n, r = re(), i = V(\"LCP\"), a = function(e) {\n                    var t = e[e.length - 1];\n                    t && t.startTime < r.firstHiddenTime && (i.value = Math.max(t.startTime - U(), 0), i.entries = [\n                        t\n                    ], n());\n                }, o = G(\"largest-contentful-paint\", a);\n                if (o) {\n                    n = K(e, i, Oe, t.reportAllChanges);\n                    var u = Y(function() {\n                        Be[i.id] || (a(o.takeRecords()), o.disconnect(), Be[i.id] = !0, n(!0));\n                    });\n                    [\n                        \"keydown\",\n                        \"click\"\n                    ].forEach(function(e) {\n                        addEventListener(e, function() {\n                            return setTimeout(u, 0);\n                        }, !0);\n                    }), X(u), J(function(r) {\n                        i = V(\"LCP\"), n = K(e, i, Oe, t.reportAllChanges), Q(function() {\n                            i.value = performance.now() - r.timeStamp, Be[i.id] = !0, n(!0);\n                        });\n                    });\n                }\n            });\n        }(function(t) {\n            !function(e) {\n                if (e.entries.length) {\n                    var t = q();\n                    if (t) {\n                        var n = t.activationStart || 0, r = e.entries[e.entries.length - 1], i = r.url && performance.getEntriesByType(\"resource\").filter(function(e) {\n                            return e.name === r.url;\n                        })[0], a = Math.max(0, t.responseStart - n), o = Math.max(a, i ? (i.requestStart || i.startTime) - n : 0), u = Math.max(o, i ? i.responseEnd - n : 0), s = Math.max(u, r ? r.startTime - n : 0), c = {\n                            element: H(r.element),\n                            timeToFirstByte: a,\n                            resourceLoadDelay: o - a,\n                            resourceLoadTime: u - o,\n                            elementRenderDelay: s - u,\n                            navigationEntry: t,\n                            lcpEntry: r\n                        };\n                        return r.url && (c.url = r.url), i && (c.lcpResourceEntry = i), void (e.attribution = c);\n                    }\n                }\n                e.attribution = {\n                    timeToFirstByte: 0,\n                    resourceLoadDelay: 0,\n                    resourceLoadTime: 0,\n                    elementRenderDelay: e.value\n                };\n            }(t), e(t);\n        }, t);\n    }(function(e) {\n        return _(e);\n    }, n.reportOptions.lcp), Ce(function(e) {\n        return _(e);\n    }, n.reportOptions.inp), n.isResourceTiming && k(\"resource\", je), n.isElementTiming && k(\"element\", Fe);\n}, _e = function(e) {\n    var t = \"usageDetails\" in e ? e.usageDetails : {};\n    N(\"storageEstimate\", {\n        quota: x(e.quota),\n        usage: x(e.usage),\n        caches: x(t.caches),\n        indexedDB: x(t.indexedDB),\n        serviceWorker: x(t.serviceWorkerRegistrations)\n    });\n}, qe = {\n    finalMarkToStepsMap: {},\n    startMarkToStepsMap: {},\n    active: {},\n    navigationSteps: {}\n}, Re = function(e) {\n    delete qe.active[e];\n}, Ae = function() {\n    qe.startMarkToStepsMap = {}, qe.finalMarkToStepsMap = {}, qe.active = {}, qe.navigationSteps = {};\n}, He = function() {\n    return qe.navigationSteps;\n}, ze = function(e) {\n    var t;\n    return null !== (t = He()[e]) && void 0 !== t ? t : {};\n}, We = function() {\n    var e = He(), t = qe.startMarkToStepsMap, n = Object.keys(e).length;\n    if (0 === n) return {};\n    var r = {}, i = n - 1, a = ze(i);\n    if (Object.keys(a).forEach(function(e) {\n        var n, i = null !== (n = t[e]) && void 0 !== n ? n : [];\n        Object.keys(i).forEach(function(e) {\n            r[e] = !0;\n        });\n    }), n > 1) {\n        var o = ze(i - 1);\n        Object.keys(o).forEach(function(e) {\n            var n, i = null !== (n = t[e]) && void 0 !== n ? n : [];\n            Object.keys(i).forEach(function(e) {\n                r[e] = !0;\n            });\n        });\n    }\n    return r;\n}, Je = function(e) {\n    var t, r, i, a, u, s;\n    if (qe.finalMarkToStepsMap[e]) {\n        !function(e) {\n            var t = qe.navigationSteps, n = qe.finalMarkToStepsMap, r = Object.keys(t).length;\n            if (0 !== r) {\n                var i = r - 1, a = ze(i);\n                if (a && n[e]) {\n                    var o = n[e];\n                    o && Object.keys(o).forEach(function(e) {\n                        if (a[e]) {\n                            var n = ze(i) || {};\n                            n[e] = !1, t[i] = n;\n                        }\n                        if (r > 1) {\n                            var o = i - 1, u = ze(o);\n                            u[e] && (u[e] = !1, t[o] = u);\n                        }\n                    });\n                }\n            }\n        }(e);\n        var f = qe.finalMarkToStepsMap[e];\n        Object.keys(f).forEach(function(t) {\n            var r = f[t];\n            r.forEach(Re), Promise.all(r.map(function(r) {\n                !function(e, t, r) {\n                    var i = \"step.\" + e, a = o.getEntriesByName(c + t).length > 0;\n                    if (o.getEntriesByName(c + r).length > 0 && a && n.steps && n.steps[e]) {\n                        var u = D[n.steps[e].threshold], s = u.maxOutlierThreshold, f = u.vitalsThresholds, l = o.measure(i, c + t, c + r), d = l.duration;\n                        if (d <= s) {\n                            var v = function(e, t) {\n                                return e <= t[0] ? \"good\" : e <= t[1] ? \"needsImprovement\" : \"poor\";\n                            }(d, f);\n                            d >= 0 && (w(\"userJourneyStep\", d, v, {\n                                stepName: e\n                            }, void 0), o.measure(\"step.\".concat(e, \"_vitals_\").concat(v), {\n                                start: l.startTime + l.duration,\n                                end: l.startTime + l.duration,\n                                detail: {\n                                    type: \"stepVital\",\n                                    duration: d\n                                }\n                            }));\n                        }\n                    }\n                }(r, t, e);\n            })).catch(function() {});\n        });\n    } else r = e, i = qe.navigationSteps, a = Object.keys(i).length, (s = ze(u = (a > 0 ? a : 1) - 1) || [])[r] = !0, i[u] = s, function(e) {\n        var t, n = null !== (t = qe.startMarkToStepsMap[e]) && void 0 !== t ? t : [];\n        Object.keys(n).forEach(function(e) {\n            qe.active[e] || (qe.active[e] = !0);\n        });\n    }(e);\n    var l = We();\n    null === (t = n.onMarkStep) || void 0 === t || t.call(n, e, Object.keys(l));\n}, Ue = function(e) {\n    f() && !v[e] && (v[e] = !0, o.mark(\"mark_\".concat(e, \"_start\")));\n}, Ve = function(e, t, n) {\n    if (void 0 === t && (t = {}), void 0 === n && (n = !0), f() && v[e]) {\n        o.mark(\"mark_\".concat(e, \"_end\")), delete v[e];\n        var r = function(e) {\n            o.measure(e, \"mark_\".concat(e, \"_start\"), \"mark_\".concat(e, \"_end\"));\n            var t = o.getEntriesByName(e).pop();\n            return t && \"measure\" === t.entryType ? t.duration : -1;\n        }(e);\n        n && N(e, M(r), t);\n    }\n}, Ge = 0;\nexports.clear = function(e) {\n    delete v[e], o.clearMarks && (o.clearMarks(\"mark_\".concat(e, \"_start\")), o.clearMarks(\"mark_\".concat(e, \"_end\")));\n}, exports.end = Ve, exports.initPerfume = function(e) {\n    if (void 0 === e && (e = {}), n.analyticsTracker = e.analyticsTracker, n.isResourceTiming = !!e.resourceTiming, n.isElementTiming = !!e.elementTiming, n.maxTime = e.maxMeasureTime || n.maxTime, n.reportOptions = e.reportOptions || n.reportOptions, n.steps = e.steps, n.onMarkStep = e.onMarkStep, f()) {\n        \"PerformanceObserver\" in r && Ne(), void 0 !== document.hidden && document.addEventListener(\"visibilitychange\", S);\n        var t = function() {\n            if (!f()) return {};\n            var e = o.getEntriesByType(\"navigation\")[0];\n            if (!e) return {};\n            var t = e.responseStart, n = e.responseEnd;\n            return {\n                fetchTime: n - e.fetchStart,\n                workerTime: e.workerStart > 0 ? n - e.workerStart : 0,\n                totalTime: n - e.requestStart,\n                downloadTime: n - t,\n                timeToFirstByte: t - e.requestStart,\n                headerSize: e.transferSize - e.encodedBodySize || 0,\n                dnsLookupTime: e.domainLookupEnd - e.domainLookupStart,\n                redirectTime: e.redirectEnd - e.redirectStart\n            };\n        }();\n        N(\"navigationTiming\", t), t.redirectTime && _({\n            attribution: {},\n            name: \"RT\",\n            rating: j(\"RT\", t.redirectTime),\n            value: t.redirectTime\n        }), N(\"networkInformation\", function() {\n            if (\"connection\" in a) {\n                var e = a.connection;\n                return \"object\" != typeof e ? {} : (l = e.effectiveType, d = !!e.saveData, {\n                    downlink: e.downlink,\n                    effectiveType: e.effectiveType,\n                    rtt: e.rtt,\n                    saveData: !!e.saveData\n                });\n            }\n            return {};\n        }()), a && a.storage && \"function\" == typeof a.storage.estimate && a.storage.estimate().then(_e), n.steps && n.steps && (Ae(), Object.entries(n.steps).forEach(function(e) {\n            var t, n, r = e[0], i = e[1].marks, a = i[0], o = i[1], u = null !== (n = qe.startMarkToStepsMap[a]) && void 0 !== n ? n : {};\n            if (u[r] = !0, qe.startMarkToStepsMap[a] = u, qe.finalMarkToStepsMap[o]) {\n                var s = qe.finalMarkToStepsMap[o][a] || [];\n                s.push(r), qe.finalMarkToStepsMap[o][a] = s;\n            } else qe.finalMarkToStepsMap[o] = ((t = {})[a] = [\n                r\n            ], t);\n        }));\n    }\n}, exports.markNTBT = function() {\n    Ue(\"ntbt\"), h.value = 0, clearTimeout(Ge), Ge = setTimeout(function() {\n        Ve(\"ntbt\", {}, !1), _({\n            attribution: {},\n            name: \"NTBT\",\n            rating: j(\"NTBT\", h.value),\n            value: h.value\n        }), h.value = 0;\n    }, 2e3);\n}, exports.markStep = function(e) {\n    f() && (o.mark(c + e), Je(e));\n}, exports.markStepOnce = function(e) {\n    0 === o.getEntriesByName(c + e).length && (o.mark(c + e), Je(e));\n}, exports.start = Ue, exports.trackUJNavigation = function() {\n    var e, t = Object.keys(qe.navigationSteps).length;\n    qe.navigationSteps[t] = {};\n    var r = We();\n    null === (e = n.onMarkStep) || void 0 === e || e.call(n, \"\", Object.keys(r));\n}; //# sourceMappingURL=perfume.min.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/perfume.js/dist/perfume.min.js\n");

/***/ })

};
;